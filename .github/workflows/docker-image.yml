name: CI/CD Pipeline

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:

  build_and_test:

    runs-on: ubuntu-latest


    services:
      postgres:
        image: postgres:latest
        ports:
          - 25060:5432
        env:
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_NAME }}/devops_main:$(echo $GITHUB_SHA | head -c7) .
        
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
     
      - name: Push image to DigitalOcean Container Registry
        run: |
          docker push ${{ secrets.REGISTRY_NAME }}/devops_main:$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Update deployment file
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/devops_main:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
    
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml
    
      - name: Verify deployment
        run: kubectl rollout status deployment/devops-deployment
