name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      ENVIRONMENT: TESTING

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 

    - name: Run tests with coverage
      run: |
        pytest --cov=/main_test.py --cov-fail-under=100

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Build container image
      run: docker build -t ${{ secrets.REGISTRY_NAME }}/devops_main:$(echo $GITHUB_SHA | head -c7) .
 
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200
     
    - name: Push image to DigitalOcean Container Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/devops_main:$(echo $GITHUB_SHA | head -c7)

    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/devops_main:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
    
    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml
    
    - name: Verify deployments
      run: kubectl rollout status deployment/devops-deployment
